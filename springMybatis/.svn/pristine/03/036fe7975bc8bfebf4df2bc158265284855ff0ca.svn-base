var isEdit = false;
var  userId = "";
var sex;
var sexNum;
$(function() {
	$("#txtLoginName").focus();
	// 生成商品分类下拉菜单
	edit();

	$("input[type='text'],input[type='password'],textarea").focus(function() {// 获取焦点
		hideErrTip(this);
	}).blur(function() {// 失去焦点事件
		checkTxt(this);
	}).keydown(function(event) {// 键盘按下事件
		// 如果按下的按键编号是13表示按下的是回车
		if (event.which == 13) {
			// 模拟点击登录按钮
			$("#btnConfirm").click();
		}
	}).keyup(function() {// 键盘抬起时操作灰色占位符
		if ($(this).val() == "")
			// 显示灰色提示文字
			$(this).next().removeClass("hidden");
		else
			// 隐藏灰色提示文字
			$(this).next().addClass("hidden");
	});
	// 文本框内灰色提示文字点击事件
	$(".placeholder").click(function() {
		$(this).prev().focus();
	});
	
	$("#btnAdd").click(function(){
		var file = $('<input type="file" name="file"></input>').appendTo("form");
		
	});

	// 保存按钮点击事件
	$("#btnSave").click(function() {
		// 错误统计
		var errCount = 0;
		// 遍历页面上的文本框和密码框
		$("input[type='text'],input[type='password'],textarea").each(function() {
			errCount += checkTxt(this);
		});
	
		
		// 如果页面中存在错误
		if (errCount > 0) {
			return;// 退出方法
		}
		
		
		if($("#sex1").prop("checked")){
			sexNum = 1;
		}else{
			sexNum = 0;
		}
		
		
		if(sexNum == 1){
			sex="男";
		}else if(sexNum == 0){
			sex="女";
		}
		
		$("form").submit();

	});
});


// 检查文本框的内容是否为空，如果为空就显示红色的提示文字
function checkTxt(txtObj) {
	// 文本框是否出现过错误
	var isHasErr = false;
	// 获取文本框内的文字
	var textStr = $(txtObj).val();
	// 获取文本框后面红色的错误提示元素
	var errTipObj = $(txtObj).next();
	// 错误提示信息
	var getErrMsg = function() {
		// 错误提示信息
		var n = $(txtObj).prev().text();
		// 如果文本框内的文字为空
		if ($.trim(textStr) == "") {
			isHasErr = true;
			return "请输入" + n;
		}
		// 如果输入文字的长度小于minlength属性指定的长度
		if ($.trim(textStr).length < parseInt($(txtObj).attr("minlength"))) {
			isHasErr = true;
			return "长度太短";
		}
		// 判断是否包含非法字符
		if (!util.string.validate(textStr, $(txtObj).attr("validate"))) {
			isHasErr = true;
			return "请勿输入非法字符";
		}
		// 获取密码和确认密码文本框的值
		var p1 = $("#txtPwd").val(), p2 = $("#txtConfirm").val();
		if ($(txtObj).attr("id") == "txtConfirm" && p1.length > 0 && !$("#txtPwd").hasClass("txtErr") && p1 != p2) {
			isHasErr = true;
			return "密码不一致";
		}
	};
	// 获取错误提示信息
	var errMsg = getErrMsg();
	// 如果出错?显示错误提示的样式:隐藏错误提示的样式
	return isHasErr ? showErrTip(txtObj, errMsg) : hideErrTip(txtObj, errMsg);
}

// 显示错误提示的样式
function showErrTip(txtObj, errMsg, txtClass, errTipClass) {
	txtClass = txtClass == null ? "txtErr" : txtClass;
	errTipClass = errTipClass == null ? "showErrTips" : errTipClass;
	// 获取文本框后面红色的错误提示元素
	var errTipObj = $(txtObj).next().next();
	// 给文本框加上红色边框
	$(txtObj).addClass(txtClass);
	// 设置错误提示文字
	$(errTipObj).text(errMsg);
	// IE8/IE9
	if (util.isLTIE10()) {
		// 使用jq实现动画
		$(errTipObj).animate({
			opacity : "1",
			marginRight : "50px"
		}, "fast");
	} else {
		// 给错误提示文字加上显示的样式，同时修改内部文字为errMsg
		$(errTipObj).addClass(errTipClass);
	}
	return 1;
}

// 隐藏错误提示的样式
function hideErrTip(txtObj, txtClass, errTipClass) {
	txtClass = txtClass == null ? "txtErr" : txtClass;
	errTipClass = errTipClass == null ? "showErrTips" : errTipClass;
	// 获取文本框后面红色的错误提示元素
	var errTipObj = $(txtObj).next().next();
	// 去掉文本框的红色边框
	$(txtObj).removeClass(txtClass);
	// IE8/IE9
	if (util.isLTIE10()) {
		// 使用jq实现动画
		$(errTipObj).animate({
			opacity : "0",
			marginRight : "30px"
		}, "fast");
	} else {
		// 隐藏错误提示文字
		$(errTipObj).removeClass(errTipClass);
	}
	return 0;
}



function edit(){
	if(top.editObj != null){
		var e = top.editObj;
		top.editObj = null;
		$(".placeholder").each(function(){
			$(this).css("display","none");
		});
		$("#txtLoginName").val(e.loginname);
		$("#txtName").val(e.name);
		$("#txtPassWord").val(e.pwd);
		if(e.sex == "男"){
			$("#sex1").prop("checked",true);
		}else{
			$("#sex2").prop("checked",true);
		}
		userId = e.id;
		isEdit = true;
	}
}

function postGoodsInfo(allImgFileNameStr){

	$.post(isEdit ? "updateUser.action" : "regist.action",
			{	
				userId : userId,
				loginName : $("#txtLoginName").val(),
				userName : $("#txtName").val(),
				passWord : $("#txtPassWord").val(),
				sex : sex,
				sexNum : sexNum,
				txImg : allImgFileNameStr
			}
			,function(json){
		if(json.isSuccess == "true"){
			top.window.frames["ifra"].contentWindow.grid.reload("#myGrid",1);
			top.dialog.hide();
		}else{
			alert("失败");
		}
	});
}